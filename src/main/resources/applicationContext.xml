<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/util    http://www.springframework.org/schema/util/spring-util-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- ========================= PROPERTY PLACE HOLDER DEFINITION ========================= -->

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config.properties</value>
            </list>
        </property>
    </bean>

    <!-- ========================= PROPERTIES DEFINITION ========================= -->

    <util:properties id="config" location="classpath:config.properties"/>

    <!-- ========================= DATASOURCE DEFINITION ========================= -->

    <bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
        <constructor-arg ref="pooledDataSource"/>
        <property name="logFormatter">
            <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
                <property name="sqlPrefix" value="[SQL]  "/>
            </bean>
        </property>
    </bean>

    <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialPoolSize" value="${jdbc.min.pool}"/>
        <property name="maxPoolSize" value="${jdbc.max.pool}"/>
        <property name="debugUnreturnedConnectionStackTraces" value="true"/>
        <property name="preferredTestQuery" value="select 1"/>
        <property name="testConnectionOnCheckin" value="true"/>
        <property name="testConnectionOnCheckout" value="false"/>
    </bean>

    <!-- ========================= SCHEDULER DEFINITION ========================= -->

    <bean id="quartzJobScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="autoStartup" value="true"/>
        <property name="beanName" value="scheduler"/>
        <property name="applicationContextSchedulerContextKey" value="CTX"/>
        <property name="waitForJobsToCompleteOnShutdown" value="true"/>
        <property name="configLocation" value="classpath:quartz.properties"/>

        <property name="jobDetails">
            <list>
            </list>
        </property>

        <property name="triggers">
            <list>
            </list>
        </property>
    </bean>

    <!-- ========================= HIBERNATE DEFINITION ========================= -->

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">false</prop>
            </props>
        </property>
        <property name="packagesToScan" value="org.opencloudengine.samples.spring.boot"/>
    </bean>

    <!-- ========================= TRANSACTION DEFINITION ========================= -->

    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <constructor-arg type="org.springframework.transaction.PlatformTransactionManager" ref="transactionManager"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <aop:config>
        <aop:advisor pointcut="execution(* *..*Service.*(..))" advice-ref="txAdvice"/>
        <aop:advisor pointcut="execution(* *..*Repository.*(..))" advice-ref="txAdvice"/>
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
</beans>